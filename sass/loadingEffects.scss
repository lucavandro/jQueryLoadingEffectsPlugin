@import "variables";

.pageload {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	visibility: hidden;
}

.pageload-content.vertical-centered{

	position: relative;
	display: table;

	> * {
		display: table-cell;
		vertical-align: middle;
	}
		
}

.pageload.show {
	visibility: visible;
}

.pageload svg {
	position: absolute;
	top: 0;
	left: 0;
	pointer-events: none;
}

.pageload svg path {
	fill: $page-content-bg;
}

.pageload.pageload-dots::after,
.pageload.pageload-dots::before,
.pageload-content{
	color: $page-content-color;
	visibility: hidden;
	position: fixed;
	z-index: $zindex-page-content;
	opacity: 0;
	transition: opacity $page-content-transition-duration, visibility 0s $page-content-transition-duration;
	width: 100%;
	height: 100%;
}

.pageload.pageload-dots::after,
.pageload.pageload-dots::before {
	visibility: hidden;
	position: fixed;
	z-index: $zindex-page-content;
	opacity: 0;
	transition: opacity $page-content-transition-duration, visibility 0s $page-content-transition-duration;
	content: '';
	width: 2*$dot-radius;
	height: 2*$dot-radius;
	top: 50%;
	left: 50%;
	margin: -$dot-radius 0 0 -$dot-radius;
	border-radius: 50%;
}

.pageload.pageload-dots::after {
	background: $right-dot-bg;
	transform: translateX(-2*$dot-radius);
	animation: moveRight $dot-transition-duration linear infinite alternate;
}

.pageload.pageload-dots::before {
	background: $left-dot-bg;
	transform: translateX(2*$dot-radius);
	animation: moveLeft $dot-transition-duration linear infinite alternate;
}



@keyframes moveRight {
	to { transform: translateX(2*$dot-radius); }
}

@keyframes moveLeft {
	to { transform: translateX(-2*$dot-radius); }
}

.pageload-loading .pageload-content,
.pageload-loading.pageload.pageload-dots::after,
.pageload-loading.pageload.pageload-dots::before {
	opacity: 1;
	visibility: visible;
	transition: opacity 2*$page-content-transition-duration;
}